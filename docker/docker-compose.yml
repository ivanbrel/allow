version: '3.9'

services:
  postgres:
    container_name: aflow-postgres
    image: debezium/postgres:14
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=aflow_db
    healthcheck:
      test: "pg_isready -U postgres -d aflow_db"
      interval: 2s
      timeout: 20s
      retries: 10
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: aflow-zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: aflow-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:29092,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#        KAFKA_CREATE_TOPICS: "test:1:1"
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop:3.28.0
    restart: "no"
    environment:
      - KAFKA_BROKERCONNECT=kafka:29092
      - JVM_OPTS=-Xms16M -Xmx512M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
    ports:
      - 9000:9000
    depends_on:
      - kafka

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - 8123:8123
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    depends_on: [ zookeeper, kafka ]
  debezium:
    image: debezium/connect:1.9
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on: [ zookeeper, kafka ]
  python:
    image: ihsnlky/python:latest
    depends_on: [ clickhouse ]